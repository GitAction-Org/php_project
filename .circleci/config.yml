# version: 2.1

# orbs:
#   php: circleci/php@1.1.0

# jobs:
#   install_dependencies:
#     docker:
#       - image: cimg/php:7.4 
#     steps:
#       - checkout
#       - php/install-composer:
#           install-version: 2.0.8 
#       - php/install-packages

#   run_tests:
#     docker:
#       - image: cimg/php:7.4
#     steps:
#       - php/install-composer:
#           install-version: 2.0.8
#       - php/install-packages
#       - run:
#           name: Run Test Cases
#           command: composer test

# workflows:
#   test_application:
#     jobs:
#       - install_dependencies
#       - run_tests


#-----------------------------------------------------------

# version: 2.1

# orbs:
#   php: circleci/php@1.1.0

# jobs:

#   run_tests:
#     docker:
#       - image: cimg/php:7.4
#     steps:
#       - php/install-composer:
#           install-version: 2.0.8
#       - php/install-packages
#       - run:
#           name: Run Test Cases
#           command: composer test

# workflows:
#   test_application:
#     jobs:
#       - run_tests

#------------------------------------------------------------------

# version: 2.1

# orbs:
#   php: circleci/php@1.1.0

# jobs:

#   run_tests:
#     docker:
#       - image: cimg/php:7.4
#     working_directory: /home/circleci/project  # Set the correct working directory
#     steps:
#       - checkout  # This will clone your repository into the working directory
#       - php/install-composer:
#           install-version: 2.0.8
#       - php/install-packages
#       - run:
#           name: Run Test Cases
#           command: phpunit --testsuite=Unit 

# workflows:
#   test_application:
#     jobs:
#       - run_tests

#------------------------------------------------------
version: 2.1

orbs:
  php: circleci/php@1.1.0

jobs:
  run_tests:
    docker:
      - image: cimg/php:7.4 # Use the appropriate PHP image version
    working_directory: /home/circleci/project  # Set the correct working directory
    steps:
      - checkout  # Checkout the code from the repository

      # Update package list and install Composer
      - run:
          name: Install Composer
          command: |
            sudo apt-get update && sudo apt-get install -y wget unzip # Install wget and unzip
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php --install-dir=./composer --filename=composer # Install Composer locally
            php -r "unlink('composer-setup.php');"
            echo 'export PATH=$PATH:$PWD/composer' >> $BASH_ENV # Add Composer to PATH

      - run:
          name: Install Dependencies
          command: composer install --no-interaction --no-progress --no-suggest

      # Install PHPUnit globally using Composer
      - run:
          name: Install PHPUnit
          command: |
            composer global require phpunit/phpunit # Install PHPUnit globally
            echo 'export PATH=$PATH:$HOME/.composer/vendor/bin' >> $BASH_ENV # Add PHPUnit to PATH

      # Run PHPUnit tests
      - run:
          name: Run Unit Tests
          command: phpunit --testsuite=Unit # Run PHPUnit for the 'Unit' test suite

      - run:
          name: Run Feature Tests
          command: phpunit --testsuite=Feature # Run PHPUnit for the 'Feature' test suite

workflows:
  test_application:
    jobs:
      - run_tests
